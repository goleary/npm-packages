on:
    push:
        branches:
            - release/*/v*

jobs:
    release:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  # Fetch full history to get all tags so we can get PREV_VERSION
                  fetch-depth: 0
            - name: Use Node.js
              uses: actions/setup-node@v1
              with:
                  node-version: "14.x"

            - name: Set version enviroment variables
              run: |
                  set -x

                    #   slack_message "Starting release workflow"
                  next_version=${GITHUB_REF##*/}
                  echo "$GITHUB_REF"
                  pkg=${echo "$GITHUB_REF" | cut -d / -f 2}

                  echo "version: $next_version"
                  echo "package: $pkg"

              #   current_version="$(jq -r .version package.json)"
              #   tag="react-valu-search/v${next_version}"
              #   link_ver="$(echo $next_version | tr -cd '[:alnum:]')"
              #   changelog_link="https://docs.valusearch.pro/react-valu-search/changelog#v${link_ver}"
              #   cp NPM_README.md README.md
              #   echo "" >> README.md
              #   echo "Updates in this version: ${changelog_link}" >> README.md
              #   echo "" >> README.md
              #   if [ "$next_version" = "prerelease" ]; then
              #     next_version="${current_version}-dev.${GITHUB_SHA:0:10}"
              #     tag="react-valu-search/v${next_version}"
              #   else
              #     if [ "$(git tag -l  "$tag")" != "" ]; then
              #       slack_message "Tag $version already exists. Cannot make release using it"
              #       exit 1
              #     fi
              #   fi
              #   prev_tag="$(git describe --abbrev=0 --match 'react-valu-search/v*' || true)"
              #   prev_version=$(echo "$prev_tag" | sed -E "s/.+v([0-9\.]+)\$/\1/")
              #   echo "prev_version=$prev_version" >> $GITHUB_ENV
              #   echo "next_version=$next_version" >> $GITHUB_ENV
              #   echo "tag=$tag" >> $GITHUB_ENV

            # - name: Commit version numbers
            #   run: |
            #       . .github/npm-release.sh
            #       jq ".version = \"$next_version\"" package.json > tmp.json
            #       mv tmp.json package.json
            #       git config user.email "action@github.com"
            #       git config user.name "${{ github.actor }}"
            #       git add package.json
            #       git commit -m "Update version numbers to v${next_version}"
            #       git tag -a "$tag" -m "@valu/react-valu-search v$next_version"

            # - name: Build the package
            #   run: |
            #       . .github/npm-release.sh
            #       npm install
            #       npm test
            #       npm run build

            # - name: Push commits and tags
            #   if: ${{ github.ref != 'refs/heads/release/react-valu-search/prerelease' }}
            #   run: |
            #       . .github/npm-release.sh
            #       git push origin HEAD:master
            #       git push origin --tags

            # - name: Make STABLE npm release
            #   if: ${{ github.ref != 'refs/heads/release/react-valu-search/prerelease' }}
            #   run: |
            #       . .github/npm-release.sh
            #       echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > "$HOME/.npmrc"
            #       npm whoami
            #       npm publish
            #       rm "$HOME/.npmrc"

            # - name: Make PRELEASE npm release
            #   if: ${{ github.ref == 'refs/heads/release/react-valu-search/prerelease' }}
            #   run: |
            #       . .github/npm-release.sh
            #       echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > "$HOME/.npmrc"
            #       npm whoami
            #       npm publish --tag dev
            #       rm "$HOME/.npmrc"

            # - name: Notify prerelease
            #   if: ${{ github.ref == 'refs/heads/release/react-valu-search/prerelease' }}
            #   run: |
            #       . .github/npm-release.sh
            #       slack_message "New \`@valu/react-valu-search\` prelease. \n\nInstall with \`npm install --save-exact @valu/react-valu-search@${next_version}\`"

            # - name: Notify stable release
            #   if: ${{ github.ref != 'refs/heads/release/react-valu-search/prerelease' }}
            #   run: |
            #       . .github/npm-release.sh
            #       slack_message "New \`@valu/react-valu-search\` stable release. \n\nInstall with \`npm install @valu/react-valu-search@^${next_version}\`"

            # - name: Notify about failure
            #   if: failure()
            #   run: |
            #       set -eu
            #       . .github/utils.sh
            #       slack_message '<!channel> '"Failed to make npm release"
